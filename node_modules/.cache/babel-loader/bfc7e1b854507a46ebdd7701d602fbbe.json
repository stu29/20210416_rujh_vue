{"remainingRequest":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\src\\store\\module\\app.js","dependencies":[{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\src\\store\\module\\app.js","mtime":1567648062344},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\.babelrc","mtime":1567648062203},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618890453389},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import _objectSpread from \"C:\\\\Users\\\\\\u8339\\u5BB6\\u8C6A\\\\Desktop\\\\20210416_rujh_vue\\\\20210416_rujh_vue\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"C:\\\\Users\\\\\\u8339\\u5BB6\\u8C6A\\\\Desktop\\\\20210416_rujh_vue\\\\20210416_rujh_vue\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport { getBreadCrumbList, setTagNavListInLocalstorage, getMenuByRouter, getTagNavListFromLocalstorage, getHomeRoute, getNextRoute, routeHasExist, routeEqual, getRouteTitleHandled, localSave, localRead } from '@/libs/util';\nimport beforeClose from '@/router/before-close';\nimport { saveErrorLogger } from '@/api/data';\nimport router from '@/router';\nimport routers from '@/router/routers';\nimport config from '@/config';\nvar homeName = config.homeName;\n\nvar closePage = function closePage(state, route) {\n  var nextRoute = getNextRoute(state.tagNavList, route);\n  state.tagNavList = state.tagNavList.filter(function (item) {\n    return !routeEqual(item, route);\n  });\n  router.push(nextRoute);\n};\n\nexport default {\n  state: {\n    breadCrumbList: [],\n    tagNavList: [],\n    homeRoute: {},\n    // homeRoute: getHomeRoute(routers, homeName),\n    local: localRead('local'),\n    errorList: [],\n    hasReadErrorPage: false\n  },\n  getters: {\n    menuList: function menuList(state, getters, rootState) {\n      return getMenuByRouter(routers, rootState.user.access);\n    },\n    errorCount: function errorCount(state) {\n      return state.errorList.length;\n    }\n  },\n  mutations: {\n    sethomeRoute: function sethomeRoute(state, route) {\n      console.log(route);\n      state.homeRoute = getHomeRoute(route, homeName);\n    },\n    setBreadCrumb: function setBreadCrumb(state, route) {\n      state.breadCrumbList = getBreadCrumbList(route, state.homeRoute);\n    },\n    setTagNavList: function setTagNavList(state, list) {\n      var tagList = [];\n\n      if (list) {\n        tagList = _toConsumableArray(list);\n      } else tagList = getTagNavListFromLocalstorage() || [];\n\n      if (tagList[0] && tagList[0].name !== homeName) tagList.shift();\n      var homeTagIndex = tagList.findIndex(function (item) {\n        return item.name === homeName;\n      });\n\n      if (homeTagIndex > 0) {\n        var homeTag = tagList.splice(homeTagIndex, 1)[0];\n        tagList.unshift(homeTag);\n      }\n\n      state.tagNavList = tagList;\n      setTagNavListInLocalstorage(_toConsumableArray(tagList));\n    },\n    closeTag: function closeTag(state, route) {\n      var tag = state.tagNavList.filter(function (item) {\n        return routeEqual(item, route);\n      });\n      route = tag[0] ? tag[0] : null;\n      if (!route) return;\n\n      if (route.meta && route.meta.beforeCloseName && route.meta.beforeCloseName in beforeClose) {\n        new Promise(beforeClose[route.meta.beforeCloseName]).then(function (close) {\n          if (close) {\n            closePage(state, route);\n          }\n        });\n      } else {\n        closePage(state, route);\n      }\n    },\n    addTag: function addTag(state, _ref) {\n      var route = _ref.route,\n          _ref$type = _ref.type,\n          type = _ref$type === void 0 ? 'unshift' : _ref$type;\n      var router = getRouteTitleHandled(route);\n\n      if (!routeHasExist(state.tagNavList, router)) {\n        if (type === 'push') state.tagNavList.push(router);else {\n          if (router.name === homeName) state.tagNavList.unshift(router);else state.tagNavList.splice(1, 0, router);\n        }\n        setTagNavListInLocalstorage(_toConsumableArray(state.tagNavList));\n      }\n    },\n    setLocal: function setLocal(state, lang) {\n      localSave('local', lang);\n      state.local = lang;\n    },\n    addError: function addError(state, error) {\n      state.errorList.push(error);\n    },\n    setHasReadErrorLoggerStatus: function setHasReadErrorLoggerStatus(state) {\n      var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      state.hasReadErrorPage = status;\n    }\n  },\n  actions: {\n    addErrorLog: function addErrorLog(_ref2, info) {\n      var commit = _ref2.commit,\n          rootState = _ref2.rootState;\n      if (!window.location.href.includes('error_logger_page')) commit('setHasReadErrorLoggerStatus', false);\n      var _rootState$user = rootState.user,\n          token = _rootState$user.token,\n          userId = _rootState$user.userId,\n          userName = _rootState$user.userName;\n\n      var data = _objectSpread({}, info, {\n        time: Date.parse(new Date()),\n        token: token,\n        userId: userId,\n        userName: userName\n      });\n\n      saveErrorLogger(info).then(function () {\n        commit('addError', data);\n      });\n    }\n  }\n};",{"version":3,"sources":["src\\store\\module\\app.js"],"names":["getBreadCrumbList","setTagNavListInLocalstorage","getMenuByRouter","getTagNavListFromLocalstorage","getHomeRoute","getNextRoute","routeHasExist","routeEqual","getRouteTitleHandled","localSave","localRead","beforeClose","saveErrorLogger","router","routers","config","homeName","closePage","state","route","nextRoute","tagNavList","filter","item","push","breadCrumbList","homeRoute","local","errorList","hasReadErrorPage","getters","menuList","rootState","user","access","errorCount","length","mutations","sethomeRoute","console","log","setBreadCrumb","setTagNavList","list","tagList","name","shift","homeTagIndex","findIndex","homeTag","splice","unshift","closeTag","tag","meta","beforeCloseName","Promise","then","close","addTag","type","setLocal","lang","addError","error","setHasReadErrorLoggerStatus","status","actions","addErrorLog","info","commit","window","location","href","includes","token","userId","userName","data","time","Date","parse"],"mappings":"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","sourceRoot":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue","sourcesContent":["import {\r\n  getBreadCrumbList,\r\n  setTagNavListInLocalstorage,\r\n  getMenuByRouter,\r\n  getTagNavListFromLocalstorage,\r\n  getHomeRoute,\r\n  getNextRoute,\r\n  routeHasExist,\r\n  routeEqual,\r\n  getRouteTitleHandled,\r\n  localSave,\r\n  localRead\r\n} from '@/libs/util'\r\nimport beforeClose from '@/router/before-close'\r\nimport { saveErrorLogger } from '@/api/data'\r\nimport router from '@/router'\r\nimport routers from '@/router/routers'\r\nimport config from '@/config'\r\nconst { homeName } = config\r\n\r\nconst closePage = (state, route) => {\r\n  const nextRoute = getNextRoute(state.tagNavList, route)\r\n  state.tagNavList = state.tagNavList.filter(item => {\r\n    return !routeEqual(item, route)\r\n  })\r\n  router.push(nextRoute)\r\n}\r\n\r\nexport default {\r\n  state: {\r\n    breadCrumbList: [],\r\n    tagNavList: [],\r\n    homeRoute: {},\r\n    // homeRoute: getHomeRoute(routers, homeName),\r\n    local: localRead('local'),\r\n    errorList: [],\r\n    hasReadErrorPage: false\r\n  },\r\n  getters: {\r\n    menuList: (state, getters, rootState) => getMenuByRouter(routers, rootState.user.access),\r\n    errorCount: state => state.errorList.length\r\n  },\r\n  mutations: {\r\n    sethomeRoute (state, route) {\r\n      console.log(route)\r\n      state.homeRoute = getHomeRoute(route, homeName)\r\n    },\r\n    setBreadCrumb (state, route) {\r\n      state.breadCrumbList = getBreadCrumbList(route, state.homeRoute)\r\n    },\r\n    setTagNavList (state, list) {\r\n      let tagList = []\r\n      if (list) {\r\n        tagList = [...list]\r\n      } else tagList = getTagNavListFromLocalstorage() || []\r\n      if (tagList[0] && tagList[0].name !== homeName) tagList.shift()\r\n      let homeTagIndex = tagList.findIndex(item => item.name === homeName)\r\n      if (homeTagIndex > 0) {\r\n        let homeTag = tagList.splice(homeTagIndex, 1)[0]\r\n        tagList.unshift(homeTag)\r\n      }\r\n      state.tagNavList = tagList\r\n      setTagNavListInLocalstorage([...tagList])\r\n    },\r\n    closeTag (state, route) {\r\n      let tag = state.tagNavList.filter(item => routeEqual(item, route))\r\n      route = tag[0] ? tag[0] : null\r\n      if (!route) return\r\n      if (route.meta && route.meta.beforeCloseName && route.meta.beforeCloseName in beforeClose) {\r\n        new Promise(beforeClose[route.meta.beforeCloseName]).then(close => {\r\n          if (close) {\r\n            closePage(state, route)\r\n          }\r\n        })\r\n      } else {\r\n        closePage(state, route)\r\n      }\r\n    },\r\n    addTag (state, { route, type = 'unshift' }) {\r\n      let router = getRouteTitleHandled(route)\r\n      if (!routeHasExist(state.tagNavList, router)) {\r\n        if (type === 'push') state.tagNavList.push(router)\r\n        else {\r\n          if (router.name === homeName) state.tagNavList.unshift(router)\r\n          else state.tagNavList.splice(1, 0, router)\r\n        }\r\n        setTagNavListInLocalstorage([...state.tagNavList])\r\n      }\r\n    },\r\n    setLocal (state, lang) {\r\n      localSave('local', lang)\r\n      state.local = lang\r\n    },\r\n    addError (state, error) {\r\n      state.errorList.push(error)\r\n    },\r\n    setHasReadErrorLoggerStatus (state, status = true) {\r\n      state.hasReadErrorPage = status\r\n    }\r\n  },\r\n  actions: {\r\n    addErrorLog ({ commit, rootState }, info) {\r\n      if (!window.location.href.includes('error_logger_page')) commit('setHasReadErrorLoggerStatus', false)\r\n      const { user: { token, userId, userName } } = rootState\r\n      let data = {\r\n        ...info,\r\n        time: Date.parse(new Date()),\r\n        token,\r\n        userId,\r\n        userName\r\n      }\r\n      saveErrorLogger(info).then(() => {\r\n        commit('addError', data)\r\n      })\r\n    }\r\n  }\r\n}\r\n"]}]}
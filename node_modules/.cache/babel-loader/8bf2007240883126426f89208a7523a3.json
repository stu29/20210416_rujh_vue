{"remainingRequest":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\src\\router\\index.js","dependencies":[{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\src\\router\\index.js","mtime":1618843197808},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\.babelrc","mtime":1567648062203},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618890453389},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport routes from './routers';\nimport store from '@/store';\nimport iView from 'iview';\nimport { setToken, getToken, canTurnTo } from '@/libs/util';\nimport config from '@/config';\nvar homeName = config.homeName;\nVue.use(Router);\nvar router = new Router({\n  routes: routes // mode: 'history'\n\n});\nvar LOGIN_PAGE_NAME = 'login';\n\nvar turnTo = function turnTo(to, access, next) {\n  if (canTurnTo(to.name, access, routes)) next(); // 有权限，可访问\n  else next({\n      replace: true,\n      name: 'error_401'\n    }); // 无权限，重定向到401页面\n};\n\nrouter.beforeEach(function (to, from, next) {\n  iView.LoadingBar.start();\n  var token = getToken();\n\n  if (!token && to.name !== LOGIN_PAGE_NAME) {\n    // 未登录且要跳转的页面不是登录页\n    next({\n      name: LOGIN_PAGE_NAME // 跳转到登录页\n\n    });\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\n    // 未登陆且要跳转的页面是登录页\n    next(); // 跳转\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\n    // 已登录且要跳转的页面是登录页\n    next({\n      name: homeName // 跳转到homeName页\n\n    });\n  } else {\n    console.log(store.state.user.hasGetInfo);\n\n    if (store.state.user.hasGetInfo) {\n      //alert(1)\n      turnTo(to, store.state.user.access, next);\n    } else {\n      //alert(2)\n      store.dispatch('getUserInfo').then(function (user) {\n        //console.log(\"4444444444\"+JSON.stringify(user))\n        // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\n        turnTo(to, user.result.roles, next);\n      }).catch(function () {\n        setToken('');\n        next({\n          name: 'login'\n        });\n      });\n    }\n  }\n});\nrouter.afterEach(function (to) {\n  iView.LoadingBar.finish();\n  window.scrollTo(0, 0);\n});\nexport default router;",{"version":3,"sources":["src\\router\\index.js"],"names":["Vue","Router","routes","store","iView","setToken","getToken","canTurnTo","config","homeName","use","router","LOGIN_PAGE_NAME","turnTo","to","access","next","name","replace","beforeEach","from","LoadingBar","start","token","console","log","state","user","hasGetInfo","dispatch","then","result","roles","catch","afterEach","finish","window","scrollTo"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA8C,aAA9C;AACA,OAAOC,MAAP,MAAmB,UAAnB;IACQC,Q,GAAaD,M,CAAbC,Q;AAERT,IAAIU,GAAJ,CAAQT,MAAR;AACA,IAAMU,SAAS,IAAIV,MAAJ,CAAW;AACxBC,gBADwB,CAExB;;AAFwB,CAAX,CAAf;AAIA,IAAMU,kBAAkB,OAAxB;;AAEA,IAAMC,SAAS,SAATA,MAAS,CAACC,EAAD,EAAKC,MAAL,EAAaC,IAAb,EAAsB;AACnC,MAAIT,UAAUO,GAAGG,IAAb,EAAmBF,MAAnB,EAA2Bb,MAA3B,CAAJ,EAAwCc,OAAxC,CAA+C;AAA/C,OACKA,KAAK;AAAEE,eAAS,IAAX;AAAiBD,YAAM;AAAvB,KAAL,EAF8B,CAEa;AACjD,CAHD;;AAKAN,OAAOQ,UAAP,CAAkB,UAACL,EAAD,EAAKM,IAAL,EAAWJ,IAAX,EAAoB;AACpCZ,QAAMiB,UAAN,CAAiBC,KAAjB;AACA,MAAMC,QAAQjB,UAAd;;AACA,MAAI,CAACiB,KAAD,IAAUT,GAAGG,IAAH,KAAYL,eAA1B,EAA2C;AACzC;AACAI,SAAK;AACHC,YAAML,eADH,CACmB;;AADnB,KAAL;AAGD,GALD,MAKO,IAAI,CAACW,KAAD,IAAUT,GAAGG,IAAH,KAAYL,eAA1B,EAA2C;AAChD;AACAI,WAFgD,CAEzC;AACR,GAHM,MAGA,IAAIO,SAAST,GAAGG,IAAH,KAAYL,eAAzB,EAA0C;AAC/C;AACAI,SAAK;AACHC,YAAMR,QADH,CACY;;AADZ,KAAL;AAGD,GALM,MAKA;AACLe,YAAQC,GAAR,CAAYtB,MAAMuB,KAAN,CAAYC,IAAZ,CAAiBC,UAA7B;;AACA,QAAIzB,MAAMuB,KAAN,CAAYC,IAAZ,CAAiBC,UAArB,EAAiC;AAC/B;AACAf,aAAOC,EAAP,EAAWX,MAAMuB,KAAN,CAAYC,IAAZ,CAAiBZ,MAA5B,EAAoCC,IAApC;AACD,KAHD,MAGO;AACL;AACAb,YAAM0B,QAAN,CAAe,aAAf,EAA8BC,IAA9B,CAAmC,gBAAQ;AACzC;AACA;AACAjB,eAAOC,EAAP,EAAWa,KAAKI,MAAL,CAAYC,KAAvB,EAA8BhB,IAA9B;AACD,OAJD,EAIGiB,KAJH,CAIS,YAAM;AACb5B,iBAAS,EAAT;AACAW,aAAK;AACHC,gBAAM;AADH,SAAL;AAGD,OATD;AAUD;AACF;AACF,CAnCD;AAqCAN,OAAOuB,SAAP,CAAiB,cAAM;AACrB9B,QAAMiB,UAAN,CAAiBc,MAAjB;AACAC,SAAOC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,CAHD;AAKA,eAAe1B,MAAf","sourceRoot":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport routes from './routers'\r\nimport store from '@/store'\r\nimport iView from 'iview'\r\nimport { setToken, getToken, canTurnTo } from '@/libs/util'\r\nimport config from '@/config'\r\nconst { homeName } = config\r\n\r\nVue.use(Router)\r\nconst router = new Router({\r\n  routes,\r\n  // mode: 'history'\r\n})\r\nconst LOGIN_PAGE_NAME = 'login'\r\n\r\nconst turnTo = (to, access, next) => {\r\n  if (canTurnTo(to.name, access, routes)) next() // 有权限，可访问\r\n  else next({ replace: true, name: 'error_401' }) // 无权限，重定向到401页面\r\n}\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  iView.LoadingBar.start()\r\n  const token = getToken()\r\n  if (!token && to.name !== LOGIN_PAGE_NAME) {\r\n    // 未登录且要跳转的页面不是登录页\r\n    next({\r\n      name: LOGIN_PAGE_NAME // 跳转到登录页\r\n    })\r\n  } else if (!token && to.name === LOGIN_PAGE_NAME) {\r\n    // 未登陆且要跳转的页面是登录页\r\n    next() // 跳转\r\n  } else if (token && to.name === LOGIN_PAGE_NAME) {\r\n    // 已登录且要跳转的页面是登录页\r\n    next({\r\n      name: homeName // 跳转到homeName页\r\n    })\r\n  } else {\r\n    console.log(store.state.user.hasGetInfo)\r\n    if (store.state.user.hasGetInfo) {\r\n      //alert(1)\r\n      turnTo(to, store.state.user.access, next)\r\n    } else {\r\n      //alert(2)\r\n      store.dispatch('getUserInfo').then(user => {\r\n        //console.log(\"4444444444\"+JSON.stringify(user))\r\n        // 拉取用户信息，通过用户权限和跳转的页面的name来判断是否有权限访问;access必须是一个数组，如：['super_admin'] ['super_admin', 'admin']\r\n        turnTo(to, user.result.roles, next)\r\n      }).catch(() => {\r\n        setToken('')\r\n        next({\r\n          name: 'login'\r\n        })\r\n      })\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(to => {\r\n  iView.LoadingBar.finish()\r\n  window.scrollTo(0, 0)\r\n})\r\n\r\nexport default router\r\n"]}]}
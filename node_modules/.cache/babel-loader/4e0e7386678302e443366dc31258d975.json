{"remainingRequest":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\src\\components\\main\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\src\\components\\main\\main.vue","mtime":1567648062297},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\.babelrc","mtime":1567648062203},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618890453389},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\茹家豪\\Desktop\\20210416_rujh_vue\\20210416_rujh_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"C:\\\\Users\\\\\\u8339\\u5BB6\\u8C6A\\\\Desktop\\\\20210416_rujh_vue\\\\20210416_rujh_vue\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SideMenu from './components/side-menu';\nimport HeaderBar from './components/header-bar';\nimport TagsNav from './components/tags-nav';\nimport User from './components/user';\nimport Fullscreen from './components/fullscreen';\nimport Language from './components/language';\nimport ErrorStore from './components/error-store';\nimport { mapMutations, mapActions, mapGetters } from 'vuex';\nimport { getNewTagList, getNextRoute, routeEqual } from '@/libs/util';\nimport minLogo from '@/assets/images/logo-min.jpg';\nimport maxLogo from '@/assets/images/logo.jpg';\nimport routers from '@/router/routers';\nimport './main.less';\nexport default {\n  name: 'Main',\n  components: {\n    SideMenu: SideMenu,\n    HeaderBar: HeaderBar,\n    Language: Language,\n    TagsNav: TagsNav,\n    Fullscreen: Fullscreen,\n    ErrorStore: ErrorStore,\n    User: User\n  },\n  data: function data() {\n    return {\n      collapsed: false,\n      minLogo: minLogo,\n      maxLogo: maxLogo,\n      isFullscreen: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['errorCount']), {\n    tagNavList: function tagNavList() {\n      return this.$store.state.app.tagNavList;\n    },\n    tagRouter: function tagRouter() {\n      return this.$store.state.app.tagRouter;\n    },\n    userAvator: function userAvator() {\n      return this.$store.state.user.avatorImgPath;\n    },\n    cacheList: function cacheList() {\n      return this.tagNavList.length ? this.tagNavList.filter(function (item) {\n        return !(item.meta && item.meta.notCache);\n      }).map(function (item) {\n        return item.name;\n      }) : [];\n    },\n    menuList: function menuList() {\n      return this.$store.getters.menuList;\n    },\n    local: function local() {\n      return this.$store.state.app.local;\n    },\n    hasReadErrorPage: function hasReadErrorPage() {\n      return this.$store.state.app.hasReadErrorPage;\n    }\n  }),\n  methods: _objectSpread({}, mapMutations(['setBreadCrumb', 'sethomeRoute', 'setTagNavList', 'addTag', 'setLocal']), mapActions(['handleLogin']), {\n    turnToPage: function turnToPage(route) {\n      var _ref = {},\n          name = _ref.name,\n          params = _ref.params,\n          query = _ref.query;\n      if (typeof route === 'string') name = route;else {\n        name = route.name;\n        params = route.params;\n        query = route.query;\n      }\n\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1]);\n        return;\n      }\n\n      this.$router.push({\n        name: name,\n        params: params,\n        query: query\n      });\n    },\n    turnToPagePath: function turnToPagePath(path) {\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1]);\n        return;\n      }\n\n      this.$router.push({\n        path: path\n      });\n    },\n    handleCollapsedChange: function handleCollapsedChange(state) {\n      this.collapsed = state;\n    },\n    handleCloseTag: function handleCloseTag(res, type, route) {\n      if (type === 'all') {\n        this.turnToPage(this.$config.homeName);\n      } else if (routeEqual(this.$route, route)) {\n        if (type !== 'others') {\n          var nextRoute = getNextRoute(this.tagNavList, route);\n          this.$router.push(nextRoute);\n        }\n      }\n\n      this.setTagNavList(res);\n    },\n    handleClick: function handleClick(item) {\n      //this.turnToPage(item)\n      this.turnToPagePath(item.path);\n    }\n  }),\n  watch: {\n    '$route': function $route(newRoute) {\n      var name = newRoute.name,\n          query = newRoute.query,\n          params = newRoute.params,\n          meta = newRoute.meta;\n      this.addTag({\n        route: {\n          name: name,\n          query: query,\n          params: params,\n          meta: meta\n        },\n        type: 'push'\n      });\n      this.setBreadCrumb(newRoute);\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute));\n      this.$refs.sideMenu.updateOpenName(newRoute.name);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    /**\r\n     * @description 初始化设置面包屑导航和标签导航\r\n     */\n    this.setTagNavList();\n    this.addTag({\n      route: this.$store.state.app.homeRoute\n    });\n    this.setBreadCrumb(this.$route);\n    this.sethomeRoute(routers); // 设置初始语言\n\n    this.setLocal(this.$i18n.locale); // 如果当前打开页面不在标签栏中，跳到homeName页\n\n    if (!this.tagNavList.find(function (item) {\n      return item.name === _this.$route.name;\n    })) {\n      this.$router.push({\n        name: this.$config.homeName\n      });\n    }\n  }\n};",{"version":3,"sources":["main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <Layout style=\"height: 100%\" class=\"main\">\r\n    <Sider hide-trigger collapsible :width=\"256\" :collapsed-width=\"64\" v-model=\"collapsed\" class=\"left-sider\" :style=\"{overflow: 'hidden'}\">\r\n      <side-menu accordion ref=\"sideMenu\" :active-name=\"$route.name\" :collapsed=\"collapsed\" @on-select=\"turnToPage\" :menu-list=\"menuList\">\r\n        <!-- 需要放在菜单上面的内容，如Logo，写在side-menu标签内部，如下 -->\r\n        <div class=\"logo-con\">\r\n          <img v-show=\"!collapsed\" :src=\"maxLogo\" key=\"max-logo\" />\r\n          <img v-show=\"collapsed\" :src=\"minLogo\" key=\"min-logo\" />\r\n        </div>\r\n      </side-menu>\r\n    </Sider>\r\n    <Layout>\r\n      <Header class=\"header-con\">\r\n        <header-bar :collapsed=\"collapsed\" @on-coll-change=\"handleCollapsedChange\">\r\n          <user :user-avator=\"userAvator\"/>\r\n          <!-- <language v-if=\"$config.useI18n\" @on-lang-change=\"setLocal\" style=\"margin-right: 10px;\" :lang=\"local\"/>\r\n          <error-store v-if=\"$config.plugin['error-store'] && $config.plugin['error-store'].showInHeader\" :has-read=\"hasReadErrorPage\" :count=\"errorCount\"></error-store> -->\r\n          <fullscreen v-model=\"isFullscreen\" style=\"margin-right: 10px;\"/>\r\n        </header-bar>\r\n      </Header>\r\n      <Content class=\"main-content-con\">\r\n        <Layout class=\"main-layout-con\">\r\n          <div class=\"tag-nav-wrapper\">\r\n            <tags-nav :value=\"$route\" @input=\"handleClick\" :list=\"tagNavList\" @on-close=\"handleCloseTag\"/>\r\n          </div>\r\n          <Content class=\"content-wrapper\">\r\n            <keep-alive :include=\"cacheList\">\r\n              <router-view/>\r\n            </keep-alive>\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n    </Layout>\r\n  </Layout>\r\n</template>\r\n<script>\r\nimport SideMenu from './components/side-menu'\r\nimport HeaderBar from './components/header-bar'\r\nimport TagsNav from './components/tags-nav'\r\nimport User from './components/user'\r\nimport Fullscreen from './components/fullscreen'\r\nimport Language from './components/language'\r\nimport ErrorStore from './components/error-store'\r\nimport { mapMutations, mapActions, mapGetters } from 'vuex'\r\nimport { getNewTagList, getNextRoute, routeEqual } from '@/libs/util'\r\nimport minLogo from '@/assets/images/logo-min.jpg'\r\nimport maxLogo from '@/assets/images/logo.jpg'\r\nimport routers from '@/router/routers'\r\nimport './main.less'\r\nexport default {\r\n  name: 'Main',\r\n  components: {\r\n    SideMenu,\r\n    HeaderBar,\r\n    Language,\r\n    TagsNav,\r\n    Fullscreen,\r\n    ErrorStore,\r\n    User\r\n  },\r\n  data () {\r\n    return {\r\n      collapsed: false,\r\n      minLogo,\r\n      maxLogo,\r\n      isFullscreen: false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'errorCount'\r\n    ]),\r\n    tagNavList () {\r\n      return this.$store.state.app.tagNavList\r\n    },\r\n    tagRouter () {\r\n      return this.$store.state.app.tagRouter\r\n    },\r\n    userAvator () {\r\n      return this.$store.state.user.avatorImgPath\r\n    },\r\n    cacheList () {\r\n      return this.tagNavList.length ? this.tagNavList.filter(item => !(item.meta && item.meta.notCache)).map(item => item.name) : []\r\n    },\r\n    menuList () {\r\n      return this.$store.getters.menuList\r\n    },\r\n    local () {\r\n      return this.$store.state.app.local\r\n    },\r\n    hasReadErrorPage () {\r\n      return this.$store.state.app.hasReadErrorPage\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'setBreadCrumb',\r\n      'sethomeRoute',\r\n      'setTagNavList',\r\n      'addTag',\r\n      'setLocal'\r\n    ]),\r\n    ...mapActions([\r\n      'handleLogin'\r\n    ]),\r\n    turnToPage (route) {\r\n      let { name, params, query } = {}\r\n      if (typeof route === 'string') name = route\r\n      else {\r\n        name = route.name\r\n        params = route.params\r\n        query = route.query\r\n      }\r\n      if (name.indexOf('isTurnByHref_') > -1) {\r\n        window.open(name.split('_')[1])\r\n        return\r\n      }\r\n      this.$router.push({\r\n        name,\r\n        params,\r\n        query\r\n      })\r\n    },\r\n    turnToPagePath (path) {\r\n      if (name.indexOf('isTurnByHref_') > -1) {\r\n        window.open(name.split('_')[1])\r\n        return\r\n      }\r\n      this.$router.push({\r\n        path: path\r\n      })\r\n    },\r\n    handleCollapsedChange (state) {\r\n      this.collapsed = state\r\n    },\r\n    handleCloseTag (res, type, route) {\r\n      if (type === 'all') {\r\n        this.turnToPage(this.$config.homeName)\r\n      } else if (routeEqual(this.$route, route)) {\r\n        if (type !== 'others') {\r\n          const nextRoute = getNextRoute(this.tagNavList, route)\r\n          this.$router.push(nextRoute)\r\n        }\r\n      }\r\n      this.setTagNavList(res)\r\n    },\r\n    handleClick (item) {\r\n      //this.turnToPage(item)\r\n      this.turnToPagePath(item.path)\r\n    }\r\n  },\r\n  watch: {\r\n    '$route' (newRoute) {\r\n      const { name, query, params, meta } = newRoute\r\n      this.addTag({\r\n        route: { name, query, params, meta },\r\n        type: 'push'\r\n      })\r\n      this.setBreadCrumb(newRoute)\r\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute))\r\n      this.$refs.sideMenu.updateOpenName(newRoute.name)\r\n    }\r\n  },\r\n  mounted () {\r\n    /**\r\n     * @description 初始化设置面包屑导航和标签导航\r\n     */\r\n    this.setTagNavList()\r\n    this.addTag({\r\n      route: this.$store.state.app.homeRoute\r\n    })\r\n    this.setBreadCrumb(this.$route)\r\n    this.sethomeRoute(routers)\r\n    // 设置初始语言\r\n    this.setLocal(this.$i18n.locale)\r\n    // 如果当前打开页面不在标签栏中，跳到homeName页\r\n    if (!this.tagNavList.find(item => item.name === this.$route.name)) {\r\n      this.$router.push({\r\n        name: this.$config.homeName\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src\\components\\main"}]}